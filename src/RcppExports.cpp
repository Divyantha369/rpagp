// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "rpagp_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fit_rpagp_cpp
Rcpp::List fit_rpagp_cpp(const arma::mat& y, int n_iter, const Rcpp::List& theta0, const Rcpp::List& hyperparam, uint64_t seed);
RcppExport SEXP _rpagp_fit_rpagp_cpp(SEXP ySEXP, SEXP n_iterSEXP, SEXP theta0SEXP, SEXP hyperparamSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type hyperparam(hyperparamSEXP);
    Rcpp::traits::input_parameter< uint64_t >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(fit_rpagp_cpp(y, n_iter, theta0, hyperparam, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rpagp_fit_rpagp_cpp", (DL_FUNC) &_rpagp_fit_rpagp_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_rpagp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
